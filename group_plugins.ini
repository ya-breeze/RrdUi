[CPU]
	; variable : file mask : rrd DS : rrd type
	; output variables: cpu-0-idle. cpu-3-user
	DEF[]  = "$1-$2-$3:.*/(cpu)-(.*)/.*-(.*):value:AVERAGE"
	
	; variable : function : input variables mask : ['group by' regexp, if empty - no groupping]
	; output : CDEF : cpu-idle=cpu-0-idle, cpu-1-idle,+, ...
	FUNC[] = "sum-$1 : SUM : (.*)-(.*)-(.*) : .*-.*-(.*)"
	
	; style : variable[#color] : [title]
	DRAW[] = "STACK:sum-(.*):$1"

[DF]
	DEF[] = "$1-$2-used:.*/(df)/.*-(.*):used:AVERAGE"
	DEF[] = "$1-$2-free:.*/(df)/.*-(.*):free:AVERAGE"

	FUNC[] = "sum-$1 : SUM : (.*)-(.*)-(.*) : .*-(.*)-.*"
	
	; variable : expression : ['group by' mask, if empty - no groupping]
	; expression is a RPN string separated with ",". Variable regexp should be in square bracket - [variable mask]
	CDEF[] = "div-$1 : [.*-used], 100, *, [sum-(.*)], / : df-(.*)-used|sum-(.*)"
	; not groupped CDEF are available
	CDEF[] = "test : df-root-used, 2, * :"

	; style : variable[#color] : [title]
	DRAW[] = "LINE1:div-(.*):$1"
